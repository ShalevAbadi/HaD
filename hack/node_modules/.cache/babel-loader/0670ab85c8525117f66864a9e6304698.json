{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _IconButton = _interopRequireDefault(require(\"@material-ui/core/IconButton\"));\n\nvar _orange = _interopRequireDefault(require(\"@material-ui/core/colors/orange\"));\n\nvar _grey = _interopRequireDefault(require(\"@material-ui/core/colors/grey\"));\n\nvar _styles = require(\"@material-ui/core/styles\");\n\nvar _Star = _interopRequireDefault(require(\"@material-ui/icons/Star\"));\n\nvar _StarBorder = _interopRequireDefault(require(\"@material-ui/icons/StarBorder\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar noPointerEvents = {\n  pointerEvents: 'none'\n};\nvar styles = {\n  root: {},\n  iconButton: {\n    padding: 8,\n    marginLeft: -8,\n    '&:first-child': {\n      marginLeft: 0\n    }\n  },\n  disabled: noPointerEvents,\n  readOnly: noPointerEvents\n  /**\n   * Material design star rating component for your star application.\n   * @see [Card UI controls](https://material.io/guidelines/components/cards.html#cards-actions)\n   */\n\n};\n\nvar Rating =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Rating, _Component);\n\n  function Rating(props) {\n    var _this;\n\n    _classCallCheck(this, Rating);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Rating).call(this, props));\n    _this.state = {\n      hoverValue: props.value\n    };\n    return _this;\n  }\n\n  _createClass(Rating, [{\n    key: \"getIcon\",\n    value: function getIcon(type, index) {\n      var _this$props = this.props,\n          disabled = _this$props.disabled,\n          iconNormal = _this$props.iconNormal,\n          iconNormalRenderer = _this$props.iconNormalRenderer,\n          iconHovered = _this$props.iconHovered,\n          iconHoveredRenderer = _this$props.iconHoveredRenderer,\n          iconFilled = _this$props.iconFilled,\n          iconFilledRenderer = _this$props.iconFilledRenderer;\n\n      switch (type) {\n        case 'normal':\n          return iconNormalRenderer ? iconNormalRenderer(_objectSpread({}, this.props, {\n            index: index\n          })) : disabled ? _react.default.cloneElement(iconNormal, {\n            nativeColor: _grey.default[300]\n          }) : iconNormal;\n\n        case 'hovered':\n          return iconHoveredRenderer ? iconHoveredRenderer(_objectSpread({}, this.props, {\n            index: index\n          })) : disabled ? _react.default.cloneElement(iconHovered, {\n            nativeColor: _grey.default[300]\n          }) : iconHovered;\n\n        case 'filled':\n          return iconFilledRenderer ? iconFilledRenderer(_objectSpread({}, this.props, {\n            index: index\n          })) : disabled ? _react.default.cloneElement(iconFilled, {\n            nativeColor: _grey.default[300]\n          }) : iconFilled;\n      }\n    }\n  }, {\n    key: \"renderIcon\",\n    value: function renderIcon(i) {\n      var value = this.props.value;\n      var rest = value >= i - 1 && value < i ? value - i + 1 : 0;\n      var filled = rest > 0 || i <= value;\n      var hovered = rest > 0 || i <= Math.floor(this.state.hoverValue);\n\n      if (rest > 0) {\n        return _react.default.createElement(_react.default.Fragment, null, _react.default.cloneElement(Math.floor(this.state.hoverValue) < value ? this.getIcon('normal', i) : this.getIcon('hovered', i), {\n          style: {\n            position: 'absolute'\n          }\n        }), _react.default.cloneElement(this.state.hoverValue < value ? this.getIcon('hovered', i) : this.getIcon('filled', i), {\n          style: {\n            clipPath: \"polygon(0% 0%, \".concat(rest * 100, \"% 0%, \").concat(rest * 100, \"% 100%, 0% 100%)\")\n          }\n        }));\n      }\n\n      if (hovered && !filled || !hovered && filled) {\n        return this.getIcon('hovered', i);\n      } else if (filled) {\n        return this.getIcon('filled', i);\n      } else {\n        return this.getIcon('normal', i);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          max = _this$props2.max,\n          disabled = _this$props2.disabled,\n          readOnly = _this$props2.readOnly,\n          value = _this$props2.value,\n          onChange = _this$props2.onChange;\n      var rating = [];\n\n      var _loop = function _loop(i) {\n        var _classNames;\n\n        rating.push(_react.default.createElement(_IconButton.default, {\n          key: i,\n          className: (0, _classnames.default)(classes.iconButton, (_classNames = {}, _defineProperty(_classNames, classes.disabled, disabled), _defineProperty(_classNames, classes.readOnly, readOnly), _classNames)),\n          disabled: disabled,\n          onMouseEnter: function onMouseEnter() {\n            return _this2.setState({\n              hoverValue: i\n            });\n          },\n          onMouseLeave: function onMouseLeave() {\n            return _this2.setState({\n              hoverValue: value\n            });\n          },\n          onClick: function onClick() {\n            if (!readOnly && onChange) {\n              onChange(i);\n            }\n          }\n        }, _this2.renderIcon(i)));\n      };\n\n      for (var i = 1; i <= max; i++) {\n        _loop(i);\n      }\n\n      return _react.default.createElement(\"div\", {\n        className: classes.root\n      }, rating);\n    }\n  }]);\n\n  return Rating;\n}(_react.Component);\n\nRating.defaultProps = {\n  disabled: false,\n  max: 5,\n  readOnly: false,\n  value: 0,\n  iconHovered: _react.default.createElement(_StarBorder.default, {\n    nativeColor: _orange.default[500]\n  }),\n  iconFilled: _react.default.createElement(_Star.default, {\n    nativeColor: _orange.default[500]\n  }),\n  iconNormal: _react.default.createElement(_StarBorder.default, {\n    nativeColor: _grey.default[300]\n  })\n};\nRating.propTypes = {\n  /** Useful to extend the style applied to components. See the repository README for the accepted keys. */\n  classes: _propTypes.default.object.isRequired,\n\n  /** Disables the rating and gray it out if set to true. */\n  disabled: _propTypes.default.bool,\n\n  /** This is the icon to be used as an icon in value range. */\n  iconFilled: _propTypes.default.node,\n\n  /** Overrides filled icon renderer. */\n  iconFilledRenderer: _propTypes.default.func,\n\n  /** Overrides hovered icon renderer. */\n  iconHoveredRenderer: _propTypes.default.func,\n\n  /** This is the icon to be used as an hovered icon. */\n  iconHovered: _propTypes.default.node,\n\n  /** This is the icon to be used as an normal icon. */\n  iconNormal: _propTypes.default.node,\n\n  /** Overrides normal icon renderer. */\n  iconNormalRenderer: _propTypes.default.func,\n\n  /** The max value of the rating bar. */\n  max: _propTypes.default.number,\n\n  /** Fired when a value is clicked. */\n  onChange: _propTypes.default.func,\n\n  /** Don't allow input if set to true. */\n  readOnly: _propTypes.default.bool,\n\n  /** The value of the rating bar. */\n  value: _propTypes.default.number\n};\n\nvar _default = (0, _styles.withStyles)(styles)(Rating);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}